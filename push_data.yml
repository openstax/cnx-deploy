---
# This forcibly wipes and loads data from files/cnxarchive_dump.tar.gz.

- name: get database details
  hosts: database
  vars_prompt:
    - name: "db_name"
      prompt: "What database are we pushing to?"
      default: cnxarchive
    - name: "db_user"
      prompt: "What database user should we use?"
      default: cnxarchive
    - name: "db_password"
      prompt: "What password should we use for the database user?"
  tasks:
    - set_fact:
        db_name: "{{ db_name }}"
        db_user: "{{ db_user }}"
        db_password: "{{ db_password }}"

- name: transfer database dump
  hosts: database
  tasks:
    - name: create directory for database dump
      file:
        path: /tmp/cnxarchive_dump
        state: directory
    - unarchive:
        src: "cnxarchive_dump.tar"
        dest: "/tmp/cnxarchive_dump"

- name: stop archive
  hosts: archive
  tasks:
    - become: yes
      supervisorctl:
        name: "archive:"
        state: stopped

- name: stop publishing
  hosts: publishing
  become: yes
  tasks:
    - supervisorctl:
        name: "publishing:"
        state: stopped
    - supervisorctl:
        name: "publishing_worker:"
        state: stopped
    - supervisorctl:
        name: "channel_processing"
        state: stopped

- name: stop zclients
  hosts:
    - zclient
    - pdf_gen
  tasks:
    - become: yes
      supervisorctl:
        name: "{{ item }}"
        state: stopped
      with_items: "[{% for i in range(0, hostvars[inventory_hostname].zclient_count|default(1), 1) %}'{{ 'zclient_instance{}'.format(i) }}',{% endfor %}]"

- name: stop pdf_gen applications
  hosts: pdf_gen
  tasks:
    - become: yes
      supervisorctl:
        name: pdf_gen
        state: stopped

- name: forcibly push data
  hosts: database
  tasks:
    - import_tasks: tasks/create_db_user.yml
      vars:
        role_attr_flags: 'SUPERUSER'
    - name: drop database
      become: yes
      become_user: postgres
      shell: "dropdb {{ db_name }}"
      ignore_errors: yes
    - name: create database
      become: yes
      become_user: postgres
      shell: "createdb -O {{ db_user }} {{ db_name }}"
    - name: load database without files
      become: yes
      become_user: postgres
      shell: "zcat /tmp/cnxarchive_dump/cnxarchive_dump_without_files.sql.gz | psql -U {{ db_user }} {{ db_name }} -f -"

    - name: load files table
      become: yes
      become_user: postgres
      shell: zcat '/tmp/cnxarchive_dump/cnxarchive_index_files.txt.gz' '/tmp/cnxarchive_dump/cnxarchive_other_files.txt.gz' | psql -U {{ db_user }} {{ db_name }} -c "ALTER TABLE files DISABLE TRIGGER USER; COPY files (fileid, md5, sha1, file, media_type) FROM STDIN; ALTER TABLE files ENABLE TRIGGER USER;"

    - name: load module files table
      become: yes
      become_user: postgres
      shell: zcat '/tmp/cnxarchive_dump/cnxarchive_index_module_files.txt' | psql -U {{ db_user }} {{ db_name }} -c "ALTER TABLE module_files DISABLE TRIGGER USER; COPY module_files (module_ident, fileid, filename) FROM STDIN; ALTER TABLE module_files ENABLE TRIGGER USER;"
    - name: remove dump files
      file:
        path: /tmp/cnxarchive_dump
        state: absent

- name: start archive
  hosts: archive
  tasks:
    - become: yes
      supervisorctl:
        name: "archive:"
        state: started

- name: start publishing
  hosts: publishing
  become: yes
  tasks:
    - supervisorctl:
        name: "publishing:"
        state: started
    - supervisorctl:
        name: "publishing_worker:"
        state: started
    - supervisorctl:
        name: "channel_processing"
        state: started

- name: start zclients
  hosts:
    - zclient
    - pdf_gen
  tasks:
    - become: yes
      supervisorctl:
        name: "{{ item }}"
        state: started
      with_items: "[{% for i in range(0, hostvars[inventory_hostname].zclient_count|default(1), 1) %}'{{ 'zclient_instance{}'.format(i) }}',{% endfor %}]"

- name: start pdf_gen applications
  hosts: pdf_gen
  tasks:
    - become: yes
      supervisorctl:
        name: pdf_gen
        state: started

- name: restart varnish
  hosts: frontend
  tasks:
    - service:
        name: varnish
        state: restarted
      become: yes
