---
# This will rename a database to swap with an existing one.
# There will be some downtime during stop services, drop, rename and start services.

- name: get database details
  hosts: database
  vars_prompt:
    - name: "origin_db_name"
      prompt: "What database are we moving?"
      private: no
      default: repository_new
    - name: "target_db_name"
      prompt: "What database are we swapping out to (<name>_old)?"
      private: no
      default: repository
  tasks:
    - set_fact:
        origin_db_name: "{{ origin_db_name }}"
        target_db_name: "{{ target_db_name }}"
        dest_db_name: "{{ target_db_name }}_old"

- name: stop archive
  hosts: archive
  tasks:
    - become: yes
      supervisorctl:
        name: "archive:"
        state: stopped

- name: stop publishing
  hosts: publishing
  tasks:
    - become: yes
      supervisorctl:
        name: "publishing:"
        state: stopped

- name: stop post publication worker
  hosts: publishing
  tasks:
    - become: yes
      stat:
        path: "/var/cnx/venvs/publishing/bin/cnx-publishing-post-publication"
      register: post_publication_bin
    - become: yes
      when: post_publication_bin.stat.exists
      supervisorctl:
        name: "post_publication:"
        state: stopped

- name: stop publishing celery workers
  hosts: publishing
  tasks:
    - become: yes
      supervisorctl:
        name: "publishing_worker:"
        state: stopped

- name: stop channel processing
  hosts: publishing
  tasks:
    - become: yes
      supervisorctl:
        name: "channel_processing"
        state: stopped

- name: stop zclients
  hosts:
    - zclient
  tasks:
    - become: yes
      supervisorctl:
        name: "{{ item }}"
        state: stopped
      with_items: "[{% for i in range(0, hostvars[inventory_hostname].zclient_count|default(1), 1) %}'{{ 'zclient_instance{}'.format(i) }}',{% endfor %}]"

- name: stop pdf_gen applications
  hosts: pdf_gen
  tasks:
    - become: yes
      supervisorctl:
        name: pdf_gen
        state: stopped

# Varnish is still running and the frontend should be serving stale results.

- name: rename database
  hosts: database
  tasks:
    - name: rename via pgsql
      become: yes
      become_user: postgres
      shell: |
        psql -v ON_ERROR_STOP=1 --username postgres <<-" EOSQL"
        DROP DATABASE IF EXISTS {{ dest_db_name }};
        ALTER DATABASE {{ target_db_name }} RENAME TO {{ dest_db_name }};
        ALTER DATABASE {{ origin_db_name }} RENAME TO {{ target_db_name }};
        EOSQL

- name: bootstrap replicant
  hosts: replicant
  tasks:
    - name: remove old postgresql cluster on replicant
      become: yes
      become_user: postgres
      file:
        path: "/var/lib/postgresql/{{ postgres_version }}/main/"
        state: absent
    - name: copy database from master to replicant
      become: yes
      become_user: postgres
      command: "pg_basebackup --write-recovery-conf --pgdata=/var/lib/postgresql/{{ postgres_version }}/main --host={{ hostvars[groups.database[0]].ansible_default_ipv4.address }} --port=5432 --username={{ replicator_db_user|default(default_replicator_db_user) }} --xlog-method=stream --checkpoint=fast"
    - name: start postgresql service
      become: yes
      service:
        name: postgresql
        state: started
        enabled: yes

- name: start archive
  hosts: archive
  tasks:
    - become: yes
      supervisorctl:
        name: "archive:"
        state: started

- name: start publishing
  hosts: publishing
  tasks:
    - become: yes
      supervisorctl:
        name: "publishing:"
        state: started

- name: start post publication worker
  hosts: publishing
  tasks:
    - become: yes
      stat:
        path: "/var/cnx/venvs/publishing/bin/cnx-publishing-post-publication"
      register: post_publication_bin
    - become: yes
      when: post_publication_bin.stat.exists
      supervisorctl:
        name: "post_publication:"
        state: started

- name: start publishing celery workers
  hosts: publishing
  tasks:
    - become: yes
      supervisorctl:
        name: "publishing_worker:"
        state: started

- name: start channel processing
  hosts: publishing
  tasks:
    - become: yes
      supervisorctl:
        name: "channel_processing"
        state: started

- name: start zclients
  hosts:
    - zclient
  tasks:
    - become: yes
      supervisorctl:
        name: "{{ item }}"
        state: started
      with_items: "[{% for i in range(0, hostvars[inventory_hostname].zclient_count|default(1), 1) %}'{{ 'zclient_instance{}'.format(i) }}',{% endfor %}]"

- name: start pdf_gen applications
  hosts: pdf_gen
  tasks:
    - become: yes
      supervisorctl:
        name: pdf_gen
        state: started

- name: restart varnish
  hosts: frontend
  tasks:
    - service:
        name: varnish
        state: restarted
      become: yes
