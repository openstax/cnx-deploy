---
# Configure HAProxy

- name: configure haproxy zcluster
  become: yes
  blockinfile:
    dest: /etc/haproxy/haproxy.cfg
    state: present
    content: |
      frontend zcluster
        bind :8888
        default_backend zclients

      # Load balancing over the zope instances
      backend zclients
        # Use Zope's __ac cookie as a basis for session stickiness if present.
        # appsession __ac len 32 timeout 1d
        # Otherwise add a cookie called "serverid" for maintaining session stickiness.
        # This cookie lasts until the client's browser closes, and is invisible to Zope.
        #  cookie serverid insert nocache indirect
        # If no session found, use the roundrobin load-balancing algorithm to pick a backend.
        balance leastconn
        # Use / (the default) for periodic backend health checks
        option httpchk

        # Server options:
        # "cookie" sets the value of the serverid cookie to be used for the server
        # "maxconn" is how many connections can be sent to the server at once
        # "check" enables health checks
        # "rise 1" means consider Zope up after 1 successful health check
      {% for host in groups.zclient %}
      {% set ip_addr = hostvars[host]['ansible_' + iface].ipv4.address %}
      {% for i in range(0, hostvars[host].zclient_count|default(1), 1) %}
        server {{ host }}{{ i }} {{ ip_addr }}:82{{ 80 + i }} check maxconn 4 rise 1
      {% endfor %}
      {% endfor %}

        server  glad0 128.42.169.13:8080 check maxconn 4 rise 1
        server  glad1 128.42.169.13:8180 check maxconn 4 rise 1
        server  glad2 128.42.169.13:8280 check maxconn 4 rise 1
        server  quil0 128.42.169.17:8080 check maxconn 4 rise 1
        server  quil1 128.42.169.17:8180 check maxconn 4 rise 1
        server  quil2 128.42.169.17:8280 check maxconn 4 rise 1
    owner: root
    group: root
    mode: 0644
  notify:
    - reload haproxy
