---

- name: check whether rhaptos site exists
  register: rhaptos_site
  shell: echo 'print(app.plone)' | ./bin/instance debug | grep PloneSite
  args:
    chdir: "{{ source_dir }}/cnx-buildout"
  ignore_errors: True

- name: create rhaptos database user
  when: rhaptos_site|failed
  vars:
    db_user: rhaptos
    db_password: "{{ archive_db_password }}"
  include: tasks/create_db_user.yml

- name: create empty temporary rhaptos database
  when: rhaptos_site|failed
  vars:
    db_name: rhaptos
    db_owner: rhaptos
  include: tasks/create_db.yml

- name: create rhaptos site
  when: rhaptos_site|failed
  shell: "./bin/instance run scripts/create_rhaptos_site.py plone Portal postgres {{ archive_db_user }} rhaptos localhost 5432"
  args:
    chdir: "{{ source_dir }}/cnx-buildout"

- name: update database connection string in rhaptos site
  when: rhaptos_site|failed
  shell: echo 'import transaction; app.plone.rhaptosDA.connection_string = "postgres://{{ archive_db_user }}:{{ archive_db_password }}@{{ archive_db_host }}:{{ archive_db_port }}/{{ archive_db_name }}"; transaction.commit()' | ./bin/instance debug
  args:
    chdir: "{{ source_dir }}/cnx-buildout"

- name: remove temporary rhaptos database
  when: rhaptos_site|failed
  postgresql_db:
    name: rhaptos
    state: absent

- name: start instance
  become: yes
  shell: supervisorctl restart plone-instance

- name: create zope objects from database (background job)
  when: rhaptos_site|failed
  become: yes
  become_user: www-data
  # wait for plone instance to start
  shell: "while ! nc -w 1 localhost {{ zope_port }}; do sleep 1; done; ./bin/instance run scripts/build_zodb_from_postgres.py -d http://{{ zope_domain }}"
  args:
    chdir: "{{ source_dir }}/cnx-buildout"
    executable: "/bin/bash"
