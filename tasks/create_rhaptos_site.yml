---

- name: check whether rhaptos site exists
  register: rhaptos_site
  shell: echo 'print(app.plone)' | ./bin/instance debug | grep PloneSite
  args:
    chdir: "/var/lib/cnx/cnx-buildout"
  ignore_errors: True

- name: create empty temporary rhaptos database
  when: rhaptos_site|failed
  vars:
    db_name: rhaptos
    db_owner: "{{ archive_db_user }}"
    db_host: "{{ archive_db_host }}"
    db_port: "{{ archive_db_port }}"
  include: tasks/create_db.yml

- name: create rhaptos site
  when: rhaptos_site|failed
  shell: "./bin/instance run scripts/create_rhaptos_site.py plone Portal postgres {{ archive_db_user }} rhaptos {{ archive_db_host }} {{ archive_db_port }}"
  args:
    chdir: "/var/lib/cnx/cnx-buildout"

- name: set up localFS PDF folder
  when: rhaptos_site|failed
  shell: "./bin/instance run scripts/set_up_localfs_for_pdfs.py"
  args:
    chdir: "/var/lib/cnx/cnx-buildout"

- name: update database connection string in rhaptos site
  when: rhaptos_site|failed
  shell: echo 'import transaction; app.plone.rhaptosDA.connection_string = "postgres://{{ archive_db_user }}:{{ archive_db_password }}@{{ archive_db_host }}:{{ archive_db_port }}/{{ archive_db_name }}"; transaction.commit()' | ./bin/instance debug
  args:
    chdir: "/var/lib/cnx/cnx-buildout"

- name: remove temporary rhaptos database
  when: rhaptos_site|failed
  postgresql_db:
    name: rhaptos
    login_host: "{{ archive_db_host }}"
    port: "{{ archive_db_port }}"
    state: absent

- name: assign pdf_gen settings
  when: rhaptos_site|failed
  include: tasks/assign_pdf_gen_settings.yml
  tags:
    - zope
    - assign_pdf_gen_settings
