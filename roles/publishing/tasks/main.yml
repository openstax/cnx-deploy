---
# Installs publishing with all the dependencies.

# +++
# Prerequisites
# +++

# TODO Kill this dependency by prebuilding or using packaged versions
#      of the application/library.
- name: install build utilities
  become: yes
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - build-essential
    - libxml2-dev
    - libxslt-dev

- name: install postgres client
  become: yes
  apt:
    name: "postgresql-client-{{ postgres_version }}"
    state: present

# +++
# Install virtualenv(s)
# +++

- stat:
    path: "/var/cnx/venvs"
  register: venvs_dir

- name: ensure the venvs directory exists
  become: yes
  when: not venvs_dir.stat.exists
  file:
    path: "/var/cnx/venvs"
    state: directory
    mode: 0755
    owner: www-data

- name: set the owner of venvs directory
  become: yes
  file:
    path: "/var/cnx/venvs"
    state: directory
    recurse: yes
    owner: www-data

- name: create the publishing virtualenv
  become: yes
  become_user: www-data
  pip:
    name: pip
    virtualenv: "/var/cnx/venvs/publishing"
    virtualenv_python: python2

# +++
# Install
# +++

# FIXME (11-Feb-2016) Ansible >=2.1.0 required
# In order to use the pip module's ``state: forcereinstall`` option,
# we must upgrade to 2.1.0, which is not release yet.
#
# Using pip's ``--force-reinstall`` & ``--ignore-installed`` options do not
# work because they reinstall **everything**,
# which doesn't work because it tries to install some of our
# unreleased packages and then fails to find them.
#
# The blocks surrounded by ``# XXX`` & ``# /XXX`` should be removed
# as soon as possible. And this FIXME block ends with the closing /FIXME

- name: install publishing packages
  become: yes
  become_user: www-data
  pip:
    name: "{{ item }}"
    virtualenv: "/var/cnx/venvs/publishing"
    state: latest
  with_items:
    - cnx-db
    - db-migrator
    - pyramid_sawing

# XXX
- name: uninstall (local) publishing packages
  become: yes
  become_user: www-data
  pip:
    name: "{{ item }}"
    virtualenv: "/var/cnx/venvs/publishing"
    state: absent
  with_items:
    - cnx-query-grammar
    - rhaptos.cnxmlutils
    - cnx-easybake
    - cnx-epub
    - cnx-archive
    - openstax-accounts
    - cnx-publishing
# /XXX

# FIXME cssselect2-acquisition (12-Apr-2016)
# cnx-easybake requires cssselect2, which is not released to PyPI.
# To fix this we'll install it from the repo source.
- name: install git for the following task
  become: yes
  apt:
    name: git
    state: present
- name: make sure /var/www/.pip exists
  become: yes
  file:
    path: /var/www/.pip
    state: directory
    owner: www-data
- name: install cssselect2
  become: yes
  become_user: www-data
  pip:
    name: "git+https://github.com/Connexions/cssselect2.git#egg=cssselect2"
    virtualenv: "/var/cnx/venvs/publishing"
    state: present
    extra_args: "--exists-action s"
# /FIXME cssselect2-acquisition

- name: install (local) publishing packages
  become: yes
  become_user: www-data
  pip:
    name: ".{{ 'extras' in item and '[{}]'.format(','.join(item.extras)) or '' }}"
    chdir: "{{ source_dir }}/{{ item.name }}"
    virtualenv: "/var/cnx/venvs/publishing"
    ##state: forcereinstall
    state: present
  with_items:
    - name: cnx-query-grammar
    - name: rhaptos.cnxmlutils
    - name: cnx-easybake
    - name: cnx-epub
      # FIXME (12-Apr-2016) The pip module can't install `.[feature]` at this time.
      # https://github.com/ansible/ansible-modules-core/issues/3426
      # extras:
      #   - collation
    - name: cnx-archive
    - name: openstax-accounts
    - name: cnx-publishing

# /FIXME

# +++
# Configure
# +++

- name: ensure the etc directories exists
  become: yes
  file:
    path: "/etc/{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - cnx
    - cnx/publishing

- name: render configuration
  become: yes
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0744
    owner: root
    group: root
  with_items:
    - {src: "etc/cnx/publishing/app.ini",
       dest: "/etc/cnx/publishing/app.ini"}
    - {src: "etc/cnx/publishing/logging.yaml",
       dest: "/etc/cnx/publishing/logging.yaml"}

# TODO make logging configuration files for pyramid_sawing

# +++
# Init databases
# +++

# Note, the setup current **assumes** that the publishing and archive database
# is the same database. There has been no reason to split these yet, so we won't.

# FIXME These initialize tasks run to failures. Ideally, it'd be nice if
#       they gracefully bailed out with a meaningful message.

- name: initialize publishing db
  command: "/var/cnx/venvs/publishing/bin/cnx-publishing-initdb /etc/cnx/publishing/app.ini"
  register: publishing_initdb_cmd
  # FIXME (30-Mar-2016) We need to fail with a more reliable message, rather than
  #       looking at the traceback line.
  failed_when: "publishing_initdb_cmd.rc > 0 and 'psycopg2.ProgrammingError: type \"publication_states\" already exists' not in publishing_initdb_cmd.stderr"

- name: initialize db-migrator
  when: "'already exists' not in publishing_initdb_cmd.stderr"
  command: "/var/cnx/venvs/publishing/bin/dbmigrator --config /etc/cnx/publishing/app.ini --context cnx-archive --context cnx-publishing init"

- name: migrate database
  command: "/var/cnx/venvs/publishing/bin/dbmigrator --config /etc/cnx/publishing/app.ini --context cnx-archive --context cnx-publishing migrate"

# +++
# Init service
# +++

- name: configure publishing under supervisor
  become: yes
  template:
    src: etc/supervisor/conf.d/publishing.conf
    dest: "/etc/supervisor/conf.d/publishing.conf"
    mode: 0644
  notify:
    - reload supervisord

- name: configure post publication worker under supervisor
  become: yes
  template:
    src: etc/supervisor/conf.d/post_publication.conf
    dest: "/etc/supervisor/conf.d/post_publication.conf"
    mode: 0644
  notify:
    - reload supervisord
