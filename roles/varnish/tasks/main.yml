---

# +++
# Install
# +++

# BBB (1-Feb-2016 ubuntu 14.04, only needed for the BBB tasks that follow.
- name: install apt-transport-https (on Ubuntu 14.04)
  when: ansible_distribution_release == "trusty"
  become: yes
  apt:
    name: "apt-transport-https"
    state: present
    force: yes

# BBB (1-Feb-2016) ubuntu 14.04
- name: add apt-key for varnish repository (on Ubuntu 14.04)
  when: ansible_distribution_release == "trusty"
  become: yes
  apt_key:
    url: https://repo.varnish-cache.org/GPG-key.txt
    state: present

# BBB (1-Feb-2016) ubuntu 14.04
- name: add varnish repository (on Ubuntu 14.04)
  when: ansible_distribution_release == "trusty"
  become: yes
  apt_repository:
    repo: "deb https://repo.varnish-cache.org/ubuntu/ trusty varnish-4.0"
    state: present
    update_cache: yes

- name: install varnish
  become: yes
  apt:
    name: varnish
    state: present
    update_cache: yes
    cache_valid_time: 3600
  notify:
    - start varnishncsa

# +++
# Configure
# +++

- name: configure varnish logic
  become: yes
  template:
    src: etc/varnish/varnish.vcl
    dest: "{{ root_prefix }}/etc/varnish/varnish.vcl"
  notify:
    - reload varnish

# BBB (21-Dec-2015) Ubuntu 15.10 still uses /etc/default/varnish,
#     while Debian 8.2 has moved to using the systemd service configuration.
- name: configure varnish runtime (init config)
  become: yes
  template:
    src: etc/default/varnish
    dest: /etc/default/varnish
    mode: 0644
    owner: root
    group: root
  notify:
    - restart varnish

# FIXME Maybe we should make our own service file and link it to
#       /etc/systemd/system/multi-user.target.wants/varnish.service
#       These files actually live at /lib/systemd/system/*.service
- name: configure varnish runtime (systemd config)
  become: yes
  lineinfile:
    dest: /etc/systemd/system/multi-user.target.wants/varnish.service
    regexp: "ExecStart=/usr/sbin/varnishd( -j unix,user=vcache -F)? -a :\\d+ -T localhost:6082 -f /etc/varnish/\\w+\\.vcl -S /etc/varnish/secret -s malloc,\\d+[KkGgMmTt]{1}( -p vcc_allow_inline_c=on)?"
    line: "ExecStart=/usr/sbin/varnishd -j unix,user=vcache -F -a :{{ varnish_port }} -T localhost:6082 -f /etc/varnish/varnish.vcl -S /etc/varnish/secret -s malloc,{{ varnish_memory_allocation }} -p vcc_allow_inline_c=on"
    insertafter: "^LimitMEMLOCK.*"
  register: service_config
  notify:
    - restart daemon tools
    - restart varnish
