# FIXME (07-Apr-12017) Usages of `hostvars[groups.authoring[0]].ansible_default_ipv4.address` in this file are temporary. Production (aka beta.cnx.org) is currently setup with only one instance of authoring. This configuration change keeps that accurate.
server {
    listen          8081;
    server_name     {{ frontend_domain }};
    root            /var/www/webview;
    index           index.html;
    try_files       $uri $uri/ /index.html;
    expires         -1;

    location /ping {
        add_header Content-Length 0;
        add_header Content-Type text/plain;
        return 200;
    }

{% if groups.authoring|length > 0 %}

    location @authoring {
        proxy_pass http://{{ hostvars[groups.authoring[0]].ansible_default_ipv4.address }}:{{ authoring_base_port|default(default_authoring_base_port) }};
    }

    location /login {
        proxy_pass http://{{ hostvars[groups.authoring[0]].ansible_default_ipv4.address }}:{{ authoring_base_port|default(default_authoring_base_port) }};
    }

    location /callback {
        proxy_pass http://{{ hostvars[groups.authoring[0]].ansible_default_ipv4.address }}:{{ authoring_base_port|default(default_authoring_base_port) }};
    }

    location /logout {
        proxy_pass http://{{ hostvars[groups.authoring[0]].ansible_default_ipv4.address }}:{{ authoring_base_port|default(default_authoring_base_port) }};
    }

    location /users/profile {
        proxy_pass http://{{ hostvars[groups.authoring[0]].ansible_default_ipv4.address }}:{{ authoring_base_port|default(default_authoring_base_port) }};
    }

    location /users/contents {
        proxy_pass http://{{ hostvars[groups.authoring[0]].ansible_default_ipv4.address }}:{{ authoring_base_port|default(default_authoring_base_port) }};
    }

    location /users/search {
        proxy_pass http://{{ hostvars[groups.authoring[0]].ansible_default_ipv4.address }}:{{ authoring_base_port|default(default_authoring_base_port) }};
    }

    location /publish {
        proxy_pass http://{{ hostvars[groups.authoring[0]].ansible_default_ipv4.address }}:{{ authoring_base_port|default(default_authoring_base_port) }};
    }

    location ~ ^/contents/.*@draft\.json {
        proxy_pass http://{{ hostvars[groups.authoring[0]].ansible_default_ipv4.address }}:{{ authoring_base_port|default(default_authoring_base_port) }};
    }

    location ~ ^/contents/.*@draft/users/me {
        proxy_pass http://{{ hostvars[groups.authoring[0]].ansible_default_ipv4.address }}:{{ authoring_base_port|default(default_authoring_base_port) }};
    }

    location ~ ^/contents/.*@draft/acceptance {
        proxy_pass http://{{ hostvars[groups.authoring[0]].ansible_default_ipv4.address }}:{{ authoring_base_port|default(default_authoring_base_port) }};
    }

    location ~ ^/resources$ {
        proxy_pass http://{{ hostvars[groups.authoring[0]].ansible_default_ipv4.address }}:{{ authoring_base_port|default(default_authoring_base_port) }};
    }

{% endif %}

    # Try to fetch resources from archive (most common)
    # and if they do not exist, fall back to cnx-authoring
    # from http://linuxplayer.org/2013/06/nginx-try-files-on-multiple-named-location-or-server
    location ~ ^/resources/.+ {
        expires          1y;
        proxy_set_header Host {{ arclishing_domain }};
        proxy_pass http://localhost:{{ varnish_port }};
        proxy_intercept_errors on;
        recursive_error_pages on;
        {% if groups.authoring|length > 0 %}error_page 404 = @authoring;{% endif %}
    }

    location /resources/ {
        expires          1y;
        proxy_set_header Host {{ arclishing_domain }};
        proxy_pass http://localhost:{{ varnish_port }};
    }

    # Hashed files: cache forever
    # Regex must match the cacheBust config in webview's Gruntfile
    location ~ /(scripts|styles|images|fonts)/(.+\.cache\..+) {
        expires     1y;
        try_files   $uri $uri/ /$1/$2 =404;
    }

    # Unhashed files: revalidate often
    location ~ /(data|locale|scripts|styles|images|fonts)/(.*) {
        expires     1m;
        try_files   $uri $uri/ /$1/$2 =404;
    }


    location ~ /exports/(.+?)(\.[^/]+)/(.+?)(\.[^/]+)$ {
        expires     1y;
        root        /var/www/;
        add_header  Link "<https://{{ frontend_domain }}/contents/$1/$3> ;rel=\"Canonical\"";
        add_header  Content-Disposition "attachment; filename=$3$4";
        try_files   {% for dir in archive_exports_directories|default(default_archive_exports_directories) %}/{{ dir }}/$1$2 {% endfor %} =404;
    }

    location ~ /exports/(.+?)(\.[^/]+)$ {
        expires     1y;
        root        /var/www/;
        add_header  Link "<https://{{ frontend_domain }}/contents/$1> ;rel=\"Canonical\"";
        add_header  Content-Disposition "attachment; filename=$1$2";
        try_files   {% for dir in archive_exports_directories|default(default_archive_exports_directories) %}/{{ dir }}/$1$2 {% endfor %} =404;
    }

    location /nginx_status {
        stub_status on;
        access_log  off;
    }
}
