---
# Installs archive and publishing with all the dependencies.
#
# The virtualenvs are installed to {{ root_prefix }}/var/cnx/venvs
# and the configuration is installed to {{ root_prefix }}/etc/cnx/.

# +++
# Prerequisites
# +++

- name: install build utilities
  become: yes
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - build-essential
    - libxml2-dev
    - libxslt-dev

- name: install postgres client
  become: yes
  apt:
    name: "postgresql-client-{{ postgres_version }}"
    state: present

# +++
# Install virtualenv(s)
# +++

- stat:
    path: "/var/cnx/venvs"
  register: venvs_dir

- name: ensure the venvs directory exists
  become: yes
  when: not venvs_dir.stat.exists
  file:
    path: "/var/cnx/venvs"
    state: directory
    mode: 0755
    owner: www-data

- name: set the owner of venvs directory
  become: yes
  file:
    path: "/var/cnx/venvs"
    state: directory
    recurse: yes
    owner: www-data

- name: create the authoring virtualenv
  become: yes
  become_user: www-data
  pip:
    name: pip
    virtualenv: "/var/cnx/venvs/authoring"
    virtualenv_python: python2

# +++
# Install
# +++

- name: install authoring packages
  become: yes
  become_user: www-data
  pip:
    name: "{{ item }}"
    virtualenv: "/var/cnx/venvs/authoring"
    state: latest
  with_items:
    - pyramid_sawing

# FIXME (11-Feb-2016) Ansible >=2.1.0 required
# In order to use the pip module's ``state: forcereinstall`` option,
# we must upgrade to 2.1.0, which is not release yet.
#
# Using pip's ``--force-reinstall`` & ``--ignore-installed`` options do not
# work because they reinstall **everything**,
# which doesn't work because it tries to install some of our
# unreleased packages and then fails to find them.
#
# The blocks surrounded by ``# XXX`` & ``# /XXX`` should be removed
# as soon as possible. And this FIXME block ends with the closing /FIXME

# XXX
- name: uninstall (local) authoring packages
  become: yes
  become_user: www-data
  pip:
    name: "{{ item }}"
    virtualenv: "/var/cnx/venvs/authoring"
    state: absent
  with_items:
    - cnx-query-grammar
    - cnx-epub
    - openstax-accounts
    - cnx-authoring
# /XXX

- name: install (local) authoring packages
  become: yes
  become_user: www-data
  pip:
    name: "{{ source_dir }}/{{ item }}"
    virtualenv: "/var/cnx/venvs/authoring"
    ##state: forcereinstall
    state: present
  with_items:
    - cnx-query-grammar
    - cnx-epub
    - openstax-accounts
    - cnx-authoring

# /FIXME

# +++
# Configure
# +++

- name: ensure the etc directories exists
  become: yes
  file:
    path: "/etc/{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - cnx
    - cnx/authoring

- name: render configuration
  become: yes
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0744
    owner: root
    group: root
  with_items:
    - {src: "etc/cnx/authoring/app.ini",
       dest: "/etc/cnx/authoring/app.ini"}

# TODO make logging configuration files for pyramid_sawing

# +++
# Init databases
# +++

# FIXME Runs to failure... Ideally, it would be nice if
#       this gracefully bailed out with a meaningful message and return code.

- name: initialize authoring db
  command: "/var/cnx/venvs/authoring/bin/cnx-authoring-initialize_db /etc/cnx/authoring/app.ini"
  register: initdb_cmd
  failed_when: "initdb_cmd.rc > 0 and 'relation \"document\" already exists' not in initdb_cmd.stderr"

# +++
# Init service
# +++

- name: configure authoring under supervisor
  become: yes
  template:
    src: etc/supervisor/conf.d/authoring.conf
    dest: "/etc/supervisor/conf.d/authoring.conf"
    mode: 0644
  notify:
    - reload supervisord
