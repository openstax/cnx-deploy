---
# Installs archive and publishing with all the dependencies.
#
# The virtualenvs are installed to /var/cnx/venvs
# and the configuration is installed to /etc/cnx/.

# +++
# Prerequisites
# +++

- name: install build utilities
  become: yes
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - build-essential
    - libxml2-dev
    - libxslt-dev
    - zlib1g-dev

- name: install postgres client
  become: yes
  apt:
    name: "postgresql-client-{{ postgres_version }}"
    state: present

# +++
# Install virtualenv(s)
# +++

- stat:
    path: "/var/cnx/venvs"
  register: venvs_dir

- name: ensure the venvs directory exists
  become: yes
  when: not venvs_dir.stat.exists
  file:
    path: "/var/cnx/venvs"
    state: directory
    mode: 0755
    owner: "{{ venvs_owner|default('www-data') }}"

- name: set the owner of venvs directory
  become: yes
  file:
    path: "/var/cnx/venvs"
    state: directory
    recurse: yes
    owner: "{{ venvs_owner|default('www-data') }}"

- name: create the authoring virtualenv
  become: yes
  become_user: "{{ venvs_owner|default('www-data') }}"
  pip:
    name: pip
    virtualenv: "/var/cnx/venvs/authoring"
    virtualenv_python: python2

# +++
# Install
# +++

- name: ensure /var/www exists
  become: yes
  file:
    path: "/var/www"
    state: directory
    mode: 0755
    owner: www-data
    group: www-data

- name: ensure /var/lib/cnx exists
  become: yes
  file:
    path: "/var/lib/cnx"
    state: directory
    mode: 0755
    owner: www-data
    group: www-data

- name: copy over requirements.txt
  become: yes
  copy:
    src: "{{ inventory_dir }}/files/authoring-requirements.txt"
    dest: "/var/lib/cnx/authoring-requirements.txt"
    owner: www-data
    group: www-data
    mode: 0755

- name: install authoring
  become: yes
  become_user: "{{ venvs_owner|default('www-data') }}"
  pip:
    requirements: "/var/lib/cnx/authoring-requirements.txt"
    virtualenv: "/var/cnx/venvs/authoring"

# +++
# Configure
# +++

- name: ensure the etc directories exists
  become: yes
  file:
    path: "/etc/{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - cnx
    - cnx/authoring

- name: render configuration
  become: yes
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0744
    owner: root
    group: root
  with_items:
    - {src: "etc/cnx/authoring/app.ini",
       dest: "/etc/cnx/authoring/app.ini"}

# TODO make logging configuration files for pyramid_sawing

# +++
# Init databases
# +++

# FIXME Runs to failure... Ideally, it would be nice if
#       this gracefully bailed out with a meaningful message and return code.

- name: initialize authoring db
  command: "/var/cnx/venvs/authoring/bin/cnx-authoring-initialize_db /etc/cnx/authoring/app.ini"
  register: initdb_cmd
  failed_when: "initdb_cmd.rc > 0 and 'relation \"document\" already exists' not in initdb_cmd.stderr"

# +++
# Init service
# +++

- name: configure authoring under supervisor
  become: yes
  template:
    src: etc/supervisor/conf.d/authoring.conf
    dest: "/etc/supervisor/conf.d/authoring.conf"
    mode: 0644
  notify:
    - reload supervisord
