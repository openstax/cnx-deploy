# based on https://github.com/lesovsky/ansible-postgresql-sr-on-el6

- name: check to see if replication is running
  become: yes
  become_user: postgres
  command: psql --username=postgres --tuples-only --command='select pg_is_in_recovery()'
  register: replication_running
  tags:
    - database
    - replication

- name: check for existence of recovery.conf
  become: yes
  stat:
    path: /var/lib/postgresql/{{ postgres_version }}/main/recovery.conf
  register: recoveryconf_file
  tags:
    - database
    - replication

- name: check that replication connection is possible
  become: yes
  become_user: postgres
  command: psql 'dbname=postgres replication=database host={{ hostvars[groups.database[0]].ansible_default_ipv4.address }} user={{ replicator_db_user|default(default_replicator_db_user) }}' -c 'IDENTIFY_SYSTEM;'
  register: replication_connection
  tags:
    - database
    - replication

- when:
    - "'f' in replication_running.stdout"
    - not recoveryconf_file.stat.exists
    - "'systemid' in replication_connection.stdout"
  become: yes
  tags:
    - database
    - replication
  block:
    - name: stop postgresql on replicant
      service:
        name: postgresql
        state: stopped
    - name: remove old postgresql cluster on replicant
      file:
        path: /var/lib/postgresql/{{ postgres_version }}/main/
        state: absent
    - name: copy database from master to replicant
      become_user: postgres
      command: "pg_basebackup --write-recovery-conf --pgdata=/var/lib/postgresql/{{ postgres_version }}/main --host={{ hostvars[groups.database[0]].ansible_default_ipv4.address }} --port=5432 --username={{ replicator_db_user|default(default_replicator_db_user) }} --xlog-method=stream --checkpoint=fast"

- name: configure recovery.conf
  become: yes
  template:
    src: "var/lib/postgresql/_/main/recovery.conf"
    dest: "/var/lib/postgresql/{{ postgres_version }}/main/recovery.conf"
    owner: postgres
    group: postgres
    mode: 0640

- name: start postgresql service
  become: yes
  service:
    name: postgresql
    state: started
    enabled: yes
