---
# Installs Press

# +++
# Prerequisites
# +++

- name: install system level dependencies
  become: yes
  apt:
    name:
      - build-essential
      - git
      - libpq-dev
      - zlib1g-dev
    state: present

- name: install postgres client
  become: yes
  apt:
    name: "postgresql-client-{{ postgres_version }}"
    state: present

# +++
# Install virtualenv(s)
# +++

- stat:
    path: "/var/cnx/venvs"
  register: venvs_dir

- name: ensure the venvs directory exists
  become: yes
  when: not venvs_dir.stat.exists
  file:
    path: "/var/cnx/venvs"
    state: directory
    mode: 0755
    owner: "{{ venvs_owner|default('www-data') }}"

- name: create a folder for python3 virtualenvs
  become: yes
  file:
    path: "/var/cnx/venvs/python3"
    state: directory
    mode: 0755
    owner: "{{ venvs_owner|default('www-data') }}"

- name: set the owner of venvs directory
  become: yes
  file:
    path: "/var/cnx/venvs"
    state: directory
    recurse: yes
    owner: "{{ venvs_owner|default('www-data') }}"

- name: create the venv
  become: yes
  become_user: "{{ venvs_owner|default('www-data') }}"
  command: "python3.6 -m venv /var/cnx/venvs/python3/press"

# +++
# Install
# +++

- stat:
    path: "/var/cnx/apps"
  register: apps_dir

- name: ensure the apps directory exists
  become: yes
  when: not apps_dir.stat.exists
  file:
    path: "/var/cnx/apps"
    state: directory
    mode: 0755
    owner: "{{ venvs_owner|default('www-data') }}"

- name: set the owner of apps directory
  become: yes
  file:
    path: "/var/cnx/apps"
    state: directory
    recurse: yes
    owner: "{{ venvs_owner|default('www-data') }}"

- name: checkout codebase
  become: yes
  become_user: "{{ venvs_owner|default('www-data') }}"
  git:
    repo: "https://github.com/Connexions/cnx-press.git"
    dest: "/var/cnx/apps/press"
    version: "{{ press_version|default('HEAD') }}"
  notify:
    - restart press
    - restart press workers

- name: upgrade pip
  become: yes
  become_user: "{{ venvs_owner|default('www-data') }}"
  pip:
    name: pip
    virtualenv: "/var/cnx/venvs/python3/press"
    state: latest

- name: install pinned dependencies via requirements/main.txt 
  become: yes
  become_user: "{{ venvs_owner|default('www-data') }}"
  pip:
    virtualenv: "/var/cnx/venvs/python3/press"
    requirements: "/var/cnx/apps/press/requirements/main.txt"
  notify:
    - restart press
    - restart press workers

- name: install press deploy dependencies into the virtualenv
  become: yes
  become_user: "{{ venvs_owner|default('www-data') }}"
  pip:
    name: "{{ item.key }}"
    version: "{{ item.value }}"
    virtualenv: "/var/cnx/venvs/python3/press"
    state: present
  with_dict: "{{ press_deploy_dependencies }}"

# +++
# Configure
# +++

- name: ensure the etc directories exists
  become: yes
  file:
    path: "/etc/{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - cnx
    - cnx/press

- name: render configuration
  become: yes
  template:
    src: "{{ item }}"
    dest: "/{{ item }}"
    mode: 0644
    owner: root
    group: root
  with_items:
    - "etc/cnx/press/vars.sh"
  notify:
    - list supervisor applications
    - restart press
    - restart press workers
