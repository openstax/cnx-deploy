---
# Playbook for managing the database and replicant.

- name: collect info on database connected hosts
  hosts:
    - db_connected
    - replicant
  # NOOP only to acquire IP address information about connected hosts.
  tasks: []

- name: install postgres database
  hosts:
    # FIXME The zclient group's rhaptos site creation requires a local database.
    #       This is only required during provisioning. =/
    - zclient
  roles:
    - postgres
  tags:
    - database
    - legacy_be
    - be

- name: install postgres database
  hosts:
    - database
    - replicant
  roles:
    - cnx_database
  tags:
    - database
    - be

- name: create databases and users
  hosts:
    - database
  tasks:
    - name: check for the database
      become: yes
      become_user: postgres
      command: psql -U postgres --tuples-only -c "select true from pg_database where datname='{{ archive_db_name }}'"
      register: archive_db_exists
    - include: tasks/create_db_user.yml
      vars:
        db_user: "{{ archive_db_user }}"
        db_password: "{{ archive_db_password }}"
        # FIXME (8-Mar-12017) New databases currently require the user to have
        #       superuser privileges. This is only required for database
        #       initialization. This is to be correct in cnx-db.
        role_attr_flags: "{{ 't' in archive_db_exists.stdout and 'CREATEDB,NOSUPERUSER' or 'SUPERUSER' }}"
    - include: tasks/create_db.yml
      vars:
        db_owner: "{{ archive_db_user }}"
        db_name: "{{ archive_db_name }}"
    - include: tasks/create_db_user.yml
      when: "{{ authoring_db_user is defined }}"
      vars:
        db_user: "{{ authoring_db_user }}"
        db_password: "{{ authoring_db_password }}"
    - include: tasks/create_db_user.yml
      vars:
        db_user: "backups"
        role_attr_flags: ""
    - include: tasks/create_db.yml
      when: "{{ authoring_db_user is defined }}"
      vars:
        db_owner: "{{ authoring_db_user }}"
        db_name: "{{ authoring_db_name }}"
    - include: tasks/create_db_user.yml
      vars:
        db_user: "{{ replicator_db_user|default(default_replicator_db_user) }}"
        role_attr_flags: "replication"
  tags:
    - database
    - be

- name: set up replication on replicant
  hosts:
    - replicant
  roles:
    - postgres_replicant
  tags:
    - database
    - replication
    - be
